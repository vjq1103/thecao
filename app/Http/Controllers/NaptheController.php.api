<?php

namespace App\Http\Controllers;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use App\Card_card;
use App\Card;
use App\Payment;
use Config;
use Auth;
use App\User;
use Facades\Yugo\SMSGateway\Interfaces\SMS;
use App\Classes\SpeedSMSAPI;
use Illuminate\Http\UploadedFile;
use Carbon\Carbon;
require("SpeedSMSAPI.php");
class NaptheController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
   
    public function index()
    {
        
        $user = Auth::user()->id;
        $h = "select *,c.card_name from payments left join cat_cards c On payments.provider = c.card_code where user_id = $user and payments.payment_status =0";
        $hsitory = DB::select($h);
        $CARD_STATUS = Config::get('constants.CARD_STATUS');
        $card = Card_card::all();
        $q = "select * from cat_cards where card_status= 1";
        $result = DB::select($q);
        return view('napthe.index',compact(array('result','hsitory','card')));
    }

    //function nap the tu web
    public function napthecao(Request $request) {

        $IMAGES = Config::get('constants.IS_IMAGE');
        $NOT_IMAGES = Config::get('constants.NOT_IMAGES');
        $CHO_DUYET = Config::get('constants.CHO_DUYET');
        $CHUA_XOA = Config::get('constants.CHUA_XOA');
		//get discount
        $q = Card_card::where('card_code',$request->get('card_type'))->get();
        $card_discount = null;
        foreach($q as $value) {
            $card_discount = $value['card_discount'];
        }
		// Request qua he thong Cuoc3MienCom
		$res = json_decode(requestRecharge_Cuoc3MienCom([
			"authUsername" => "8paydoithe",
			"authPassword" => "ngocson92",
			"selProvider" => $request->get('card_type'),
			"txtCardNumber" => $request->get('card_pin'),
			"txtCardSeri" => $request->get('card_seria'),
			"txtCardValue" => $request->get('card_price')
		]));
		
		var_dump($res);
		exit();
		
		
        //CHECK NAP BANG THE HAY ANH		
        if($request->get('nap_the')  ==  $NOT_IMAGES) {
			
			
			
		
		if($res->errorCode == 1){
			$CardValue = $res->errorPayload->cardValue; // Menh gia thuc cua the
			// Xu ly ket qua the chinh xac - xử lí kết quả thẻ chính xác	
			
			
			$result = Payment::create([
                'phone' => $request->get('user_phone'),
                'card_type_id' => $request->get('card_price'),
                'pin' => $request->get('card_pin'), //pin
                'serial' => $request->get('card_seria'), //serri
                'provider' => $request->get('card_type'), //mang
                'user_id' => $request->get('user_id'),
                'link_id' => null,
                'ip_request' => null,
                'price' => $request->get('card_price'),
                'amount' => 0,
                'rate' => $card_discount,
                'transaction_id' => str_random(10),
                'balance' => 0,
                'requestId' => null,
                'topup_type' => 0,
                'is_image' =>  $NOT_IMAGES,
                'image_url' => null,
                'notes' => null,
                'payment_status' =>  2,
                'is_deleted' => $CHUA_XOA,            
           ]);
		   
		   
		   
			
		}else{
			if($res->errorMessage == "Thẻ cào không hợp lệ hoặc đã được sử dụng"){
				// Xu ly the sai - thẻ lỗi?
				
				
				$result = Payment::create([
					'phone' => $request->get('user_phone'),
					'card_type_id' => $request->get('card_price'),
					'pin' => $request->get('card_pin'), //pin
					'serial' => $request->get('card_seria'), //serri
					'provider' => $request->get('card_type'), //mang
					'user_id' => $request->get('user_id'),
					'link_id' => null,
					'ip_request' => null,
					'price' => $request->get('card_price'),
					'amount' => 0,
					'rate' => $card_discount,
					'transaction_id' => str_random(10),
					'balance' => 0,
					'requestId' => null,
					'topup_type' => 0,
					'is_image' =>  $NOT_IMAGES,
					'image_url' => null,
					'notes' => null,
					'payment_status' =>  3,
					'is_deleted' => $CHUA_XOA,            
			   ]);
				
		 
				
			}else{
				// Xu ly he thong bao tri - bảo trì
				
			 
			 
			 
				$result = Payment::create([
					'phone' => $request->get('user_phone'),
					'card_type_id' => $request->get('card_price'),
					'pin' => $request->get('card_pin'), //pin
					'serial' => $request->get('card_seria'), //serri
					'provider' => $request->get('card_type'), //mang
					'user_id' => $request->get('user_id'),
					'link_id' => null,
					'ip_request' => null,
					'price' => $request->get('card_price'),
					'amount' => 0,
					'rate' => $card_discount,
					'transaction_id' => str_random(10),
					'balance' => 0,
					'requestId' => null,
					'topup_type' => 0,
					'is_image' =>  $NOT_IMAGES,
					'image_url' => null,
					'notes' => null,
					'payment_status' =>  5,
					'is_deleted' => $CHUA_XOA,            
			   ]);
			}
		
		
		
			
			/**
            $result = Payment::create([
                'phone' => $request->get('user_phone'),
                'card_type_id' => $request->get('card_price'),
                'pin' => $request->get('card_pin'), //pin
                'serial' => $request->get('card_seria'), //serri
                'provider' => $request->get('card_type'), //mang
                'user_id' => $request->get('user_id'),
                'link_id' => null,
                'ip_request' => null,
                'price' => $request->get('card_price'),
                'amount' => 0,
                'rate' => $card_discount,
                'transaction_id' => str_random(10),
                'balance' => 0,
                'requestId' => null,
                'topup_type' => 0,
                'is_image' =>  $NOT_IMAGES,
                'image_url' => null,
                'notes' => null,
                'payment_status' =>  $CHO_DUYET,
                'is_deleted' => $CHUA_XOA,            
           ]);
		   **/
        }
		
		
		
		
       if($result) {		   
		 
        $SITE = Config::get('constants.SITE');
        $SMSNAP = Config::get('constants.SMSNAP');
        $SDT1 = Config::get('constants.SDT1');
        $SDT2 = Config::get('constants.SDT2');
		   
		if($SMSNAP === 1)  {  
		//Ham gui sms ve dien thoai   
		$contentSMS = $SITE." - Truc tiep ".$request->get('card_type')." Price ".number_format($request->get('card_price'))." vnd, Seri: ".$request->get('card_seria')." PIN: ".$request->get('card_pin').$SDT2.$SDT1;
		SMS::send([$SDT1,$SDT2], $contentSMS);
		}
		//SMS::send(['',''], $contentSMS);
        return redirect()->back()->with('message', 'Đã nạp lên hệ thống nhà mạng.'); 
			 
       }
       return false;
    }
	}
    //function hsitory napthe

    public function Historycard()
    {
        $user = Auth::user()->id;
        $q = "select *,c.card_name from payments left join cat_cards c On payments.provider = c.card_code where user_id = $user";
        $hsitory = DB::select($q)->paginate(10);
		
        return view('napthe.index',compact('hsitory'));
    }

    public function HistoryPending()
    {
        $user = Auth::user()->id;

        $hsitory = DB::table('payments')
                ->leftJoin('users', 'payments.user_id', '=', 'users.id')
                ->leftJoin('cat_cards as c', 'payments.provider', '=', 'c.card_code')
                ->where('payments.user_id', '=', $user)
                ->select('c.card_name','payments.pin','payments.serial','c.card_code','payments.payment_status','payments.link_id','payments.payment_id',
                    'payments.image_url',
                    'payments.is_image',
                    'payments.price',
                    'payments.rate',
                    'users.chiet_khau_frame',
                    'users.member',
                    'users.level',
                    'payments.transaction_id',
                    'payments.notes',
                    'payments.created_at as created'

                )
                ->orderByRaw('payments.payment_id - payments.created_at ASC')
                ->paginate(10);
                // return $hsitory;
        return view('history.napthe',compact('hsitory'));
    }

    public function deleteCard(Request $request)
    {
        $id = $request->get('id');
        $q = "DELETE FROM payments where payment_id = $id";
        $result = DB::select($q);
        return redirect()->back()->with('message', 'Xử lý thành công!');

    }
}
